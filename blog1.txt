## ここで学べること
1. Pythonとは
2. Python3の導入
3. インタラクティブシェルについて
4. hello worldを出力してみよう

### Pythonとは

Pythonはプログラミング言語のうちの１つであり、
近年のAI(人工知能)やデータ解析にてよく用いられる言語です。
他のプログラミング言語と比べてPythonは以下のような特徴があります。

- 文法が他の言語と比べ単純かつ可読性が高い
- AIやデータ解析で使われる数式や便利なライブラリが揃っている
- オブジェクト指向や関数型など他の言語で培った形式をそのまま反映させやすい

これらの性質のため、理系の学生や最初に勉強するプログラミング言語として日本国内でもシェアを伸ばしつつあります。

### Python3の導入

#### 2系統と3系統の違い
Pythonは現在2系統、3系統と2つのバージョンが存在しますが、Python2は2020年までにサポート終了すると公式が明言しているので3系統で学ぶのが良いでしょう。

macOSではあらかじめpython2がインストールされていると思いますが、3系統に乗り換えておくのも手だと思います。

2系統と3系統の違いは機会があれば別の記事にまとめようと思いますが、簡単に説明すると、

- print文がprint関数に
- 標準入力がraw_input()からinput()に
- 文字列が3ではデフォルトでunicode(2ではstr型とunicode型が別物だった)

などが代表的です。他にも細かい部分で違いがありますが割愛します。

#### Anaconda

導入方法は色々とありますが今回はAnacondaを使ってPythonをインストールしたいと思います。

Anacondaは以下のような特徴を持っています。

- Continuum Analytics社が提供しているパッケージ
- Pythonがインストールできるだけでなくその他よく利用される外部パッケージ
があらかじめインストールされた状態で同梱されている
- pipやcondaなど便利な管理ツールが最初から使える

Python単体をインストールするよりAnacondaを導入した方が後々ラクな上に
不要になったら簡単にアンインストールできたりもします。

#### 導入

Anacondaは(https://www.anaconda.com/download)
からダウンロードすることができます。
windows版、mac版、linux版があるので、あったものをダウンロードしましょう。
バージョンも3.x、2.xがある思いますが3.xを選びましょう。
あとはインストーラを起動してインストールするだけなのですがAdvanced Optionsの覧のPATH(環境変数)だけはチェックを入れておきましょう。あとはこだわりがなければデフォルトで構いません。

インストールができたら早速動くかどうかテストをしてみましょう。

### インタラクティブシェルについて

Pythonにはインタラクティブシェルという対話的にコードを実行する機能が付属しています。
インタラクティブシェルはどのPythonハウツーでも
まず最初に触ってみようとなっているのですが、理由がいくつかあります

- エディタがなくてもPythonの動作確認ができる
- インタプリンタ型言語の仕組みを理解しやすくする
- 簡単な文法のチェックができる

実際にPythonを使ってコーディングしていく上で、
パッケージの動作確認等で利用する機会がそこそこあると思うのでちゃんと覚えましょう。

では、前章での動作テストをインタラクティブシェルを用いてやってみましょう。

まずコマンドプロンプト(ターミナル,各種コンソール)を開きます。
そして __python__ と打ってenterしてみましょう。するとこんな感じになるはずです。

```text
hoge$ python
Python 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)
[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
```

これでPythonのインタラクティブシェルを起動することができました。
起動ができているということは正常にPythonインストールできていることを示しています。

インタラクティブシェルが実行されるまでに何か表示されていますね。
これはエラーではなくPythonのバージョンやAnacondaの情報およびhelpコマンドの紹介などをtipsが表示されているだけなので気にする必要はありません。

では本記事の最後のトピックであるhello worldの出力をインタラクティブシェルを用いてやってみましょう。

### hello worldを出力してみよう

#### hello world とは

一種の宗教のようにこの呪文が唱えられていますが以下のような意味があります。

- その言語のプログラマになるための儀式
- 標準出力(コマンドプロンプト、ターミナルへの出力)のテストで用いられる
- これが打てれば他の文法も使いこなすことができるという全ての基礎

hello worldをマスターするということは出力方法を理解することに該当しPython3
のprint関数を理解することになります。

先ほど起動したインタラクティブシェルに　__print("hello world")__　と打ってみましょう。

```text
hoge$ python
Python 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)
[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> print("hello world")
hello world
>>>
```

おめでとうございます。hello worldと出力できましたね。
簡単なことに思えるかもしれませんが今の文の中に以下の内容が含まれています。

- print関数および関数の使い方
- 文字列の扱い方

これらについての詳細は今後の記事で順を追って説明していきます。

最後にインタラクティブシェルを終了しましょう。__quit()__　と
打ってみてください。

```text
hoge$ python
Python 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)
[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> print("hello world")
hello world
>>> quit()
hoge$
```

インタラクティブシェルを抜けることができました。

## 今後の予定

- データ型について
- スクリプトの実行
- 各種文法

他にも色々補完していこうと思っているのでよろしくお願いします。
