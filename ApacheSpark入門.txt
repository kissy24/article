---
# アプリケーションエンジニアのためのApache Spark入門
---
> ## 書籍の紹介,データ分析のプラットフォームの紹介

### 1. 書籍紹介
  - spark python
  - spark 2.xの説明 : 抽象度の高いデータセットを使える, confやcontextなどがsparksessionに統一, 性能の向上

### 2. データプラットフォーム
  - IoTは結局ビッグデータをデータ分析、逆も然りでAIも
  - 最適化、新たな価値の創出 : データ分析
  - データ収集　＞　データ蓄積　＞　データ処理　＞　データの分析
  - fluentd, apache kahka

### 3. spark
  - 分散処理フレームワーク
  - データをメモリに保存
  - メジャーなプログラミングをサポート
  - 大規模なデータを高速処理
  - 汎用性が高い : データ分析に必要な機能が実装済み(hadoopだとそれぞれ用意しないといけない)
  - 実行環境の選択の幅広さ : 様々な基礎やDBと連携できる

### 4. まとめ
  - データ分析プラットフォームを検討
  - データ分析プラットフォームで覚えておくべきプロダクト(spark, kahka)
  - sparkの注目理由(各コンポーネントとの連携)

> ## Spark Streaming 紹介

### 1. ストリーム処理とは
  - 無限に発生し続けるデータを処理
  - 処理が永続的に継続
  - 低遅延で処理を行う
  - 低遅延,近似値、不定期な結果出力

### 2. ストリーム処理の適応例
  - 課金処理
  - ライブ費用見積もり
  - レコメンデーションなどの異常検知

### 3. バッチ処理との違い
  1. バッチ処理
    - 実行するタイミングでデータは完全である必要がある
    - 複数の結果を出力する場合は複数回バッチを適応
    - ユーザのセッションを出力したい場合、日を跨ぐと困難に
  2. ストリーム処理
    - 無限のデータを処理(バッチ処理はストリーム処理の部分集合)

### 4. spark structured streamingとは
  - spark sql でストリーム処理を簡単に組み込むためのコンポーネント
  - 中身はバッチ処理を繰り返し行なっている(2.3では継続実行方式)

### 5. ストリーム処理による発生する問題
  - データは発生した順に到着しない(ネットワーク切断, 時刻のずれ)
  - データ間の関連を見る必要があるケースで問題になる
  - グルーピング
  - これらの対処
  - spark structured streamingではどこまで遅れが許容できるかの判定

> ## SparkSQL Cassandra の紹介

### Spark SQL
1. ファイルへのデータ蓄積
  - 機械学習や分析で利用
  - フォーマットを選択
2. 使い慣れたSQLを用いてデータを操作できる
  - 様々な利用方法がある

### Cassandra
1. マスターレス
2. sparkもcassandraも分散して動く
3. sparkからcassandraからのデータ読み込み、cassandraへのデータ書き込みを分散可能

> ## Spark MLlib の紹介

### データ分析
1. CRISP-DM
  - なぜ機械学習について勉強する際にデータ分析プロセスから入るのか
2. 機械学習 : ルールに基づくルールベースではなくデータを元に推論
  - 教師あり学習
  - 教師なし学習
  - アクティブラーニング
  - 半教師学習
3. 特徴量
  - 観測結果を特徴, 数値で表したもの
  - 次元の呪いを避けるため特徴量選択を行う
  - PCA + クラスタリングによる新たな変数生成＋選択
  - AIC(ALEとRMSE) : １発目を回すのに良い選択
4. 性能(評価)について
  - 汎化性能評価 : 交差検証,グリッドサーチ(モデルのハイパラメータを最適化)
  - 予測性能評価 : ホールドアウト法

### MLlibとは
- ML Pipelineについて
- spark上でも交差検証など使える
- RDDベースでspark3.0で削除される予定
- 問題点
  - StepAIC用のライブラリが用意されていない
  - CrossValidatorを使うとAICが取得できない

sparkを使った機械学習の普及

> ## プロダクションに向けたヒントの紹介

### IoTとSpark
- エッジルビーコンピューティングにはモデルやルールの配布が必要
- nosqlの欠点大きなデータを食わせるのことなど苦手
- CassandraとAmazon s3
- sparkは計算資源として利用される(管理の手間を減らすことができる)

### Sparkのステートレス化方法
- ストレージとの関係性が重要
  - HDFSはほとんどのケースでYERNが共存している
- ストリーム処理はどうすればいいか
  - Apache Kafka やクラウドメッセージブローカーは元からマルチテナントに利用できる
- SQLはどうすればいいか
  - Metastoreによるsparkクラスタの外部化
  - sparkを使ったETL
  - AWS Glueを使うとHadoopクラスタもなしにできる
  - 参考 : Amazon Athena

---
2018/3/20 「アプリケーションエンジニアのためのApache Spark入門」出版記念セミナー 第１回

---
