# データ型勉強

## データ型
- メモリの2進数情報を変換した時の解釈物

## 型付け
- プリミティブと複合型は対になる概念ではない
- 静的型付け: コンパイル時に型が決まる
- 動的型付け: 実行時に型が決まる
- 強い型付け: 型安全性が保たれているもの
- 型安全: 型によるバグの検知ができる
- null安全: Pythonは型を定義しない場合はnullを許容すべきではない

## ポリモーフィズム
- 静的型付けはクラスが同様の場合
- 動的型付けはメソッドが同様の場合
- go等一部の言語はダックタイピングが利用できる
  - ダックタイピング: メソッドからクラスを判定する

## 抽象クラスとインターフェース
- 抽象クラス: 処理が書ける / 1個しか継承できない
- インターフェース: 処理が書けない / 複数組み合わせたりできる / 多重継承可(振る舞いが描かれるわけはないため)
- Pythonでは抽象クラスとインターフェースを混ぜてはいけない

## Pythonで型はどう書くべきか
### 漸進的型付け
- 型が本質なもの(クラス変数や戻り値)であれば書くべき
- 基本的に、静的解析が楽なので抽象クラスを使うべき
  - ダックタイピングなどの別手段をとることも可能
  - 現状はABCを使うべき

## comtypes
- PythonだとGCを勝手にやってくれる。C#とかはやってくれない